Workflow for image writeing and reading it back using QCrank encoding using CudaQ

0)- - - - - - - -
Exercise all steps  from Readme.qiskit

step 1) - - - - - - - - - - -
Configur QCrank input  (as for Qiskit)
./prep_cannedImage.py --tag b2 --nqAddr 9

OUTPUT:    out/canImg_b2_32_32.qcrank_inp.h5


step 2) - - - - - - - - - - -
Generate QCrank Qiskit circuit and export it as numpy lists using
Util_CudaQ: qiskit_to_gateList()

OUTPUT:  out/canImg_b2_32_32.gate_list.h5
It contains serialized circuit onformation needed by CudaQ kernel constructor
 {'circ_type': circ_type, 'gate_type': gate_type, 'gate_param': gate_param},{'gate_map':m}

Execute simulation on adj-GPUs [single GPU node test]
mpiexec -np 4 ./run_cudaq_job.py --circName   canImg_b2_32_32  -n 500

measuremnt is saved in sparse array
h5-write : raw_nkey (1,) int32
h5-write : raw_ikey (1, 1301) int32

step 3) - - - - - - - - - - -
Post processing of raw data and plotting is done by as for CudaQ job
./postproc_exp.py --expName   cudaq_32efc0 --showPlots b c

OUTPUT plots: out/ibm_387aa8_f2.png , out/ibm_387aa8_f3.png  

